plugins {
    id 'java'
    id 'maven'
    id 'com.github.johnrengelman.shadow' version '2.0.0'
}

def ver = '0.1.3'

group = 'com.github.AlienIdeology'
archivesBaseName = "JCord"
version = ver + '-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // WebSocket and WebServer
    compile 'com.neovisionaries:nv-websocket-client:2.2'
    compile 'org.nanohttpd:nanohttpd:2.2.0'

    // Http Methods
    compile 'com.mashape.unirest:unirest-java:1.4.9'

    // Json
    compile 'org.json:json:20160212'

    // Commons
    compile 'org.apache.commons:commons-lang3:3.4'
    compile 'commons-io:commons-io:2.5'

    // Simple dependencies
    compile 'org.jetbrains:annotations:15.0'
    compile 'net.jodah:typetools:0.5.0'
}

//compileJava {
//    classpath = sourceSets.main.compileClasspath
//    options.encoding = 'UTF-8'
//}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    failOnError = false
//    options.memberLevel = JavadocMemberLevel.PROTECTED
//    options.author()
//    options.encoding = 'UTF-8'
//
//    exclude("org/alienideology/jcord/internal/gateway")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//shadowJar {
//    mergeServiceFiles()
//    baseName = 'J-Cord'
//    version = ver
//    classifier = "withDependencies"
//}

//build {
//    dependsOn clean
//    dependsOn javadocJar
//    dependsOn sourcesJar
//    dependsOn shadowJar
//
//    javadocJar.mustRunAfter clean
//    sourcesJar.mustRunAfter javadocJar
//    shadowJar.mustRunAfter sourcesJar
//}

//install {
//    dependsOn clean
//    dependsOn javadocJar
//    dependsOn sourcesJar
//    dependsOn shadowJar
//
//    javadocJar.mustRunAfter clean
//    sourcesJar.mustRunAfter javadocJar
//    shadowJar.mustRunAfter sourcesJar
//}

artifacts {
    archives sourcesJar
    archives shadowJar
    archives javadocJar
}

//task wrapper(type: Wrapper) {
//    gradleVersion = '3.5'
//}
